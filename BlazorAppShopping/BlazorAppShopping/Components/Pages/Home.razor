@page "/"
@using BlazorAppShopping.Service
@using BlazorAppShopping.Entities
@using System.Diagnostics
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject ProductService ProductService
@inject CartService CartService

<section class="shop_section layout_padding">
    <div class="container">
        <div class="heading_container heading_center">
            <h2>
                Latest Products
            </h2>
        </div>
        <div class="row">
            @if (products == null)
            {
                <p><em>Loading...</em></p>
            }
            else
            {
                @foreach (var product in products)
                {
                    <div class="col-sm-6 col-md-4 col-lg-3">
                        <div class="box">
                            @* <a href="/product-detail/@product.ProductId"> *@
                            <div class="img-box" @onclick="() => NavToProductDetail(product.ProductId)">
                                    <img src="@product.ImageURL" alt="@product.Name" />
                                </div>
                                <div class="detail-box">
                                    <h6>@product.Name</h6>
                                    <h6>
                                        Price
                                        <span>
                                            @product.Price.ToString("C")
                                        </span>
                                    </h6>
                                </div>
                                <div class="new">
                                    <span @onclick="() => AddToCart(product)">
                                        Cart
                                    </span>
                                </div>
                            @* </a> *@
                        </div>
                    </div>
                }
            }
        </div>


        <!-- Pagination -->
        <div class="btn-box">
            <button @onclick="PreviousPage" disabled="@(currentPage == 1)">Previous &laquo;</button>
            <span>Page @currentPage of @totalPages &laquo;</span>
            <button @onclick="NextPage" disabled="@(currentPage == totalPages)">Next &raquo</button>
        </div>
    </div>
</section>

@code {
    [Parameter]
    public Product Product { get; set; }
    private List<Product> products;
    private int currentPage = 1;
    private int pageSize = 8; 
    private int totalCount;
    private int totalPages;
    private string? searchTerm;
    protected override async Task OnInitializedAsync()
    {
        var uri = new Uri(NavigationManager.Uri);
        var queryParams = System.Web.HttpUtility.ParseQueryString(uri.Query);
        searchTerm = queryParams["search"];

        if (!string.IsNullOrEmpty(searchTerm))
        {
            var result = await ProductService.GetProductsAsync(currentPage, pageSize, searchTerm);
            products = result.Products;
            totalCount = result.TotalCount;
            totalPages = (int)Math.Ceiling(totalCount / (double)pageSize);
        } else{
            await LoadProducts();
        }
        
    }

    private async Task LoadProducts()
    {
        var result = await ProductService.GetProductsAsync(currentPage, pageSize);
        products = result.Products;
        totalCount = result.TotalCount;
        totalPages = (int)Math.Ceiling(totalCount / (double)pageSize);
    }

    private async Task PreviousPage()
    {
        if (currentPage > 1)
        {
            currentPage--;
            await LoadProducts();
        }
    }

    private async Task NextPage()
    {
        if (currentPage < totalPages)
        {
            currentPage++;
            await LoadProducts();
        }
    }

    private async Task AddToCart(Product product)
    {
        if (product == null)
        {
            Console.WriteLine("Product is null");
            return;
        }

        await CartService.AddToCartAsync(product);
        NavigationManager.NavigateTo("/cart");
    }
    private async Task NavToProductDetail(int productId)
    {
        NavigationManager.NavigateTo($"/product-detail/{productId}");
    }
}